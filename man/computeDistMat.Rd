% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computeDistMat.R
\name{computeDistMat}
\alias{computeDistMat}
\title{Compute a distance matrix for functional observations}
\usage{
computeDistMat(x, y = NULL, method = "Euclidean", dmin = 0, dmax = 1,
  dmin1 = 0, dmax1 = 1, dmin2 = 0, dmax2 = 1, t1 = 0, t2 = 1,
  .poi = seq(0, 1, length.out = ncol(x)), custom.metric = function(x, y, lp
  = 2, ...) {     return(sum(abs(x - y)^lp)^(1/lp)) }, a = NULL, b = NULL,
  c = NULL, lambda = 0, ...)
}
\arguments{
\item{x}{[\code{matrix}]\cr
matrix containing observations as rows}

\item{y}{[\code{matrix}]\cr
see \code{x}. The default \code{NULL} uses \code{y = x}.}

\item{method}{[\code{character(1)}]\cr
character string specifying the (semi-)metric to be used.
on the domain of \code{x}.}

\item{dmin, dmax, dmin1, dmax1, dmin2, dmax2}{[\code{integer(1)}]\cr
encode the indizes used to define subspaces for
\code{method \%in\% c("shortEuclidean", "relAreas")}
as numeric values between 0 and 1 by
\code{index = round(quantile(1:ncol(x), probs = dmin))}.}

\item{t1, t2}{[\code{numeric(1)}]\cr
encode the index of the points for which to compare the jump heights in
\code{method = "jump"} as numeric values between 0 and 1 by
\code{index = round(quantile(1:ncol(x), probs = t1))}.}

\item{.poi}{[\code{numeric(1 to ncol(x))}]\cr
numeric vector of length between 1 and \code{ncol(x)} taking numeric values
between 0 and 1, denoting the
index of the points of interest by
\code{index = round(quantile(1:ncol(x), probs = .poi))}
for \code{method = "points"}.}

\item{custom.metric}{[\code{function(x, y, ...)}]\cr
a function specifying how to compute the distance between
two functional observations (= numeric vectors of the same length)
\code{x} and \code{y}. It can handle additional arguments in \code{...}.
The default is the Euclidean distance (equals Minkwoski distance
with \code{lp = 2}). Used if \code{method = "custom.metric"}.}

\item{a, b, c}{[\code{numeric(1)}]\cr
weigths of the amplitude distance (\code{a}) and the phase distance (\code{b})
in a semimetric that combines them by addition.
Used for \code{method == 'elasticDistance'}.}

\item{lambda}{[\code{numeric(1)}]\cr
penalization parameter for the warping allowed before calculating the
elastic distance.
Default value is 0. Large values imply less (no) warping, small values
imply more warping.
Used for \code{method \%in\% c('elastic', 'SRV')}.}

\item{...}{additional parameters to the (semi-)metrics.}
}
\description{
This mainly internal function offers a unified framework to acces the
\code{\link[proxy]{dist}} function from the \code{proxy} package and additional
(semi-)metrics. For implemented methods see \code{\link{classiKnn}}.
}
